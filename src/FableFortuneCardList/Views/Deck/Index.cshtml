@model IEnumerable<FableFortuneCardList.Models.Deck>
@using FableFortuneCardList.Enums;

@{
    ViewData["Title"] = "Index";
}

@{
    string classTypes = string.Empty;
    foreach (ClassType classType in Enum.GetValues(typeof(ClassType)))
    {
        classTypes += classType + ",";
    }
}

<h3>Hand picked decks created by the community.</h3>
<h3>Quick Filters</h3>
<div class="col-md-6 filter-height">
    <h4>Classes</h4>
    <ul class="filterList">
        @foreach (ClassType classType in Enum.GetValues(typeof(ClassType)))
        {
            if (classType != ClassType.None && classType != ClassType.Neutral && classType != ClassType.Quest && classType != ClassType.Trophy)
            {
                <li><a href="#@classType.ToString()" class="" data-filters="@classTypes">@classType.ToString()</a></li>
            }
        }
    </ul>
</div>
<div class="col-md-6 filter-height ">
    <h4>Clear Search Filter</h4>

    <ul class="filterList">
        <li><a href="#Clear">Clear</a></li>
    </ul>
</div>
<div class="clearfix"></div>
<div class="panel">
    <div class="panel-body" style="padding: 14px;">
        @if (User.Identity.IsAuthenticated && (User.IsInRole("DeckMaster") || User.IsInRole("Admin")))
        {
            <p>
                <a asp-action="Create" class="newButton">Create New</a>
            </p>
        }
        <table class="table" id="myTable">
            <thead>
                <tr>

                    <th>
                        @Html.DisplayNameFor(model => model.Name)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Description)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Class)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Type)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.ArenaPVP)
                    </th>
                    <th class="created-by">Created By</th>
                    <th>Gold Summary</th>
                    <th>Rating</th>
                    <th></th>
                    <th></th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model)
                {
                    if (item.Completed || (User.Identity.IsAuthenticated && item.CreatedBy.Id == ViewData["currentUserId"].ToString()))
                    {
                        <tr>
                            <td>
                                <a asp-action="Details" asp-route-id="@item.ID">
                                    @Html.DisplayFor(modelItem => item.Name)
                                </a>
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Description)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Class)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Type)
                            </td>
                            <td>
                                @{
                                    if (item.ArenaPVP == DeckArenaPVP.None)
                                    {
                                        @Html.DisplayFor(modelItem => item.ArenaCoop)
                                    }
                                    else
                                    {
                                        @Html.DisplayFor(modelItem => item.ArenaPVP)
                                    }
                                }                                
                            </td>
                            <td>@item.CreatedBy.UserName</td>
                            <td>
                                @{ Html.RenderPartial("DeckGoldSummaryMini", item);}
                            </td>
                            <td>
                                @((item.DeckRankings.Select(x => x.Ranking).Where(x => x == 1).Count()) - (item.DeckRankings.Select(x => x.Ranking).Where(x => x == -1).Count()))
                            </td>
                                <td>
                                    <div class="row">
                                        <div>
                                            @{
                                                if (User.Identity.IsAuthenticated && (User.IsInRole("DeckMaster") || User.IsInRole("Admin")))
                                                {
                                                    var arrowClassUp = "vote-button-not-voted";
                                                    var userDeckRanking = item.DeckRankings.FirstOrDefault(x => x.UserID == ViewData["currentUserId"].ToString());
                                                    if (userDeckRanking != null)
                                                    {
                                                        if (userDeckRanking.Ranking == 1)
                                                        {
                                                            arrowClassUp = "vote-button-voted link-disabled";
                                                        }
                                                    }
                                                    <a id="voteUp" href="@Url.Action("Vote", "Deck")" data-vote-type=1 data-itemid="@item.ID" class="vote-button @arrowClassUp">⇧</a>
                                                }
                                                else
                                                {
                                                    <a id="voteUp" class="vote-button link-disabled">⇧</a>
                                                }
                                            }
                                        </div>
                                        <div>
                                            @{
                                                if (User.Identity.IsAuthenticated && (User.IsInRole("DeckMaster") || User.IsInRole("Admin")))
                                                {
                                                    var arrowClassDown = "vote-button-not-voted";
                                                    var userDeckRanking = item.DeckRankings.FirstOrDefault(x => x.UserID == ViewData["currentUserId"].ToString());
                                                    if (userDeckRanking != null)
                                                    {
                                                        if (userDeckRanking.Ranking == -1)
                                                        {
                                                            arrowClassDown = "vote-button-voted link-disabled";
                                                        }
                                                    }
                                                    <a id="voteDown" href="@Url.Action("Vote", "Deck")" data-vote-type=-1 data-itemid="@item.ID" class="vote-button @arrowClassDown">⇩</a>
                                                }
                                                else
                                                {
                                                    <a id="voteDown" class="vote-button link-disabled">⇩</a>
                                                }
                                            }
                                        </div>
                                    </div>
                                </td>
                            <td>   
                                <a asp-action="Details" asp-route-id="@item.ID">Details</a>

                                @if (item.CreatedBy.UserName == User.Identity.Name || User.IsInRole("Admin"))
                                {
                                    <a asp-action="Edit" asp-route-id="@item.ID">Edit</a>
                                    <a asp-action="Delete" asp-route-id="@item.ID">Delete</a>
                                }
                            </td>                                               
                        </tr>
                    }
                }
            </tbody>
        </table>
    </div>
</div>

@section scripts{
    <script>
        $(document).ready(function () {
            var table = $("#myTable").DataTable({
                "colReorder": true,
                "lengthMenu": [[10, 25, 50, 100, -1], [10, 25, 50, 100, "All"]],
                "iDisplayLength": 50,
                "order": [[7, "desc"]]
            });
            var filterLinks = $(".filterList a");
            var filteredData = filterLinks.click(function () {
                var filterValue = $(this).html();
                var curSearch = table.search();
                if (!curSearch.includes(filterValue)) {
                    var filters = $(this).data('filters');
                    if (filters != null) {
                        var splitFilters = filters.split(",");
                        splitFilters.forEach(function (item, index) {
                            if (curSearch.includes(item))
                                curSearch = curSearch.replace(item, "");
                        });
                        curSearch = curSearch.trim();
                    }
                    if (filterValue == "Clear")
                        table.search("").draw();
                    else
                        if (curSearch.length > 0)
                            table.search(curSearch + " " + filterValue).draw();
                        else
                            table.search(filterValue).draw();
                }
            });

            $(".newButton").button();

            $('.vote-button').on('click', function () {
                var $this = $(this),
                    href = $this.attr('href'),
                    itemid = $this.data('itemid'),
                    voteType = $this.data('vote-type');
                if (!$this.hasClass("link-disabled")) {
                    var data = jQuery.param({ "deckId": itemid, "voteType": voteType });
                    $.ajax({
                        type: "POST",
                        url: href,
                        async: false,
                        data: data,
                        success: function (result) {
                            if (result) {
                                $this.removeClass("vote-button-not-voted")
                                $this.addClass("vote-button-voted")
                                $this.addClass("link-disabled")
                            }                            
                        },
                        dataType: "json"
                    });
                }
            });

            $(document).ajaxError(function (event, jqxhr, settings, thrownError) {
                alert(event.result);
                alert(jqxhr.responseText);
                alert(settings.url);
                alert(settings.data);
            });
        });
    </script>
}
